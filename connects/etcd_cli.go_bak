package connects

import (
	"time"

	"github.com/coreos/etcd/clientv3"
)

type EtcdProxyCallback func(etcdCli *clientv3.Client) error

// EtcdProxy etcd客户端的代理
type EtcdProxy struct {
	Address   []string
	Cli       *clientv3.Client
	callBacks []EtcdProxyCallback
}

// Close 关闭etcd
func (proxy *EtcdProxy) Close() {
	proxy.Cli.Close()
}

// Init 使用配置给代理赋值客户端实例
func (proxy *EtcdProxy) Init(address []string, dialtimeout int32) error {
	cli, err := clientv3.New(clientv3.Config{
		Endpoints:   address,
		DialTimeout: dialtimeout * time.Second,
	})
	if err != nil {
		return err
	}
	proxy.Address = address
	proxy.Cli = cli
	for _, cb := range proxy.callBacks {
		go cb(proxy.Cli)
	}
	return nil
}

// Regist 注册回调函数,在init执行后执行回调函数
func (proxy *EtcdProxy) Regist(cb EtcdProxyCallback) {
	append(proxy.callBacks, cb)
}

// Etcd 默认的etcd代理对象
var Etcd *EtcdProxy
